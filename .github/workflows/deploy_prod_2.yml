name: Deploy WordPress to PROD2
on:
  workflow_dispatch:
jobs:
  deploy:
    runs-on: ubuntu-20.04
    env:
      ZOHO_CLIENT_ID: ${{ secrets.PROD_ZOHO_CLIENT_ID }}
      ZOHO_CLIENT_SECRET: ${{ secrets.PROD_ZOHO_CLIENT_SECRET }}
      ZOHO_REFRESH_TOKEN: ${{ secrets.PROD_ZOHO_REFRESH_TOKEN }}
      DAILYCO_API_KEY: ${{ secrets.PROD_DAILYCO_API_KEY }}
      GCLOUD_KEY: ${{ secrets.GCLOUD_KEY }}
      OPENAI_KEY: ${{ secrets.PROD_OPENAI_KEY }}
      WP_HOST: ${{ vars.PROD_WP_HOST }}
      SITE_DOMAINS: ${{ vars.PROD_SITE_DOMAINS }}
      WP_PASSWORD: ${{ secrets.PROD_WP_PASSWORD }}
      server: ${{ vars.PRODUCTION_IP }}
      server_path: /home/ubuntu/${{ github.event.repository.name }}/
      ssh_key: ${{ secrets.PROD_SSH_KEY }}
      HARVEST_ENV: PROD
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ env.ssh_key }}
      - name: Execute set_env script
        run: python3 scripts/set_env.py
      - name: Deploy container environment config
        run: |
          mkdir ce
          mkdir ce/public
          cp ./public/composer.* ce/public/
          cp ./php.ini ce/
          cp docker-compose.yml ce/
          cp scripts/fix-wp-container.sh ce/
          rsync -r -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" ce/ ubuntu@${{ env.server }}:${{ env.server_path }}

      - name: Deploy containers
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ubuntu@${{ env.server }} \
          "cd ${{ env.server_path }} && docker compose up -d && sleep 5"
      - name: Execute deploy script
        run: scripts/deploy_wp.sh
      - name: Configure the container
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ubuntu@${{ env.server }} \
          "cd ${{ env.server_path }} && chmod +x ./fix-wp-container.sh && ./fix-wp-container.sh"
